package com.kh.controller;

import java.io.IOException;
import java.util.Arrays;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * Servlet implementation class RequestGetServlet
 */
@WebServlet("/test1.do")
public class RequestGetServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public RequestGetServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

		//System.out.println("진짜야?? ");
		/*
		 * GET방식으로 요청하면 doGet메소드가 호출됌
		 * 
		 * 첫번째 매개변수인 HttpServletRequest request에는 요청 시 전달된 내용들이 담김
		 * => 사용자가 입력한 값, 요청전송방식, 요청한 사용자의 ip주소 등...
		 * 
		 * 두번째 매개변수인 HttpServletResponse response에는 요청 처리 후 응답을 할때 사용하는 객체
		 * 
		 * 요청 처리 스텝
		 * 
		 * 1. 우선, 요청을 처리하기 위해 요청 시 전달된 값(사용자가 입력한 값)들을 뽑는다.
		 * => request의 parameter라는 영역의 안에 존재
		 * => key-value세트로 담겨있음!! (name속성값 - value속성값)
		 * 
		 * 2. 뽑아낸 값들을 가지고 요청 처리해야함(Service -> DAO -> DB)
		 * 
		 * 3. 처리 결과에 따른 성공 / 실패 페이지 응답
		 *
		 */
		
		
		
		/*
		 * request의 parameter영역으로부터 전달된 데이터를 뽑는 메서드
		 * 
		 * 
		 * - request.getParameter("키값") : String(그에 해당하는 value값)
		 * => 무조건 문자열 형태로 반환되기 때문에
		 * 	 다른 자료형으로 변경하려면 파싱해야된다.
		 * 
		 * - request.getParameterValues("키값") : String[](그에 해당하는 value값들)
		 * => 하나의 key값으로 여러개의 value들을 받는 경우(checkbox)
		 * 	 문자열 배열 형으로 반환 가능
		 * 
		 */
		
		// 1단계
		String name = request.getParameter("name");
		// "홍길동" / ""(텍스트 상자가 빈 경우 빈문자열이 넘어간다)
		

		String gender = request.getParameter("gender");
		// "M" / "F" / null(라디오 버튼의 경우 체크된것이 없을 경우 null이 넘어간다.)
		
		int age = Integer.parseInt(request.getParameter("age"));
		// "15" -> 15
		// Wrapper클래스로 파싱
		// "" : NumberFormatException 발생
		
		String city = request.getParameter("city"); // "서울시"
		
		double height = Double.parseDouble(request.getParameter("height")); // 190.0
		
		String[] foods = request.getParameterValues("food");
		// ["한식","양식"] / null(체크박스의 경우 체크된것이 하나도 없으면 null이 넘어감)
		
		// 출력해보기
		System.out.println("name : " + name);
		System.out.println("gender : " + gender);
		System.out.println("age : " + age);
		System.out.println("city : " + city);
		System.out.println("height : " + height);
		//System.out.println("foods : " + foods);
		
		if(foods == null) {
			System.out.println("foods : 없음");
		}else {
			System.out.println("foods : " + Arrays.toString(foods));
		}
		
		
		
		
		
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}

}
